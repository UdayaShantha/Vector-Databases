# -*- coding: utf-8 -*-
"""ChromaDB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZOjECTWdq4r2gyrdxlAMj9FJQy6JpOXP
"""

!pip install chromadb -q

#Create the chromadb client object

import chromadb
client = chromadb.Client()

client

#Create the collection in chromaDB

collection=client.create_collection(name="my_collection")

#Create data to add

content1="Artificial Intelligence (AI) is transforming industries worldwide, enhancing automation, decision-making, and data analysis. AI encompasses machine learning, deep learning, and neural networks, which enable systems to learn and improve from data. Applications of AI include healthcare diagnostics, fraud detection, and personalized recommendations in e-commerce."
content2="Climate change is a pressing global issue caused by greenhouse gas emissions from human activities. Rising temperatures, melting glaciers, and extreme weather events threaten ecosystems and biodiversity. Scientists advocate for renewable energy sources, carbon footprint reduction, and sustainable practices to mitigate climate change."
content3="Quantum computing is a revolutionary field that leverages quantum mechanics to perform complex computations at unprecedented speeds. Unlike classical computers, which use bits, quantum computers use qubits that exist in superposition states. Companies like Google and IBM are advancing quantum research, aiming for breakthroughs in cryptography, material science, and AI."
content4="Blockchain technology provides a decentralized and secure method for recording transactions. Initially developed for cryptocurrencies like Bitcoin, blockchain now powers applications in supply chain management, digital identity verification, and smart contracts. Its immutable and transparent nature makes it a powerful tool for reducing fraud and enhancing trust."
content5="The field of biotechnology is revolutionizing medicine, agriculture, and industry. Advances in genetic engineering, CRISPR technology, and synthetic biology enable scientists to develop new treatments for genetic disorders, enhance crop yields, and produce sustainable biofuels. Ethical considerations and regulatory policies play crucial roles in shaping the future of biotechnology."

collection.add(
    documents=[content1,content2,content3,content4,content5],
    metadatas=[{"source":"Technology"},{"source":"Environment"},{"source":"Science"},{"source":"Finance"},{"source":"Biotechnology"}],
    ids=["id1","id2","id3","id4","id5"]
)

#Search the similarity

input_text=str(input())
results=collection.query(
    query_texts=input_text,
    n_results=2
)
results

#Add data

content6="The Internet of Things (IoT) connects billions of devices worldwide, enabling smart homes, cities, and industries. IoT devices collect and transmit data, improving efficiency and automation in various sectors. However, security concerns, data privacy, and network vulnerabilities remain challenges that require robust cybersecurity measures."

collection.add(
    documents=[content6],
    metadatas=[{"source":"Technology"}],
    ids=["id6"]
)

collection.count()

#Read data

# read_data=collection.get()

read_data=collection.get(
    where={"source":"Technology"}
)

read_data

#Update data

collection.update(
    ids=["id6"],
    documents=["Cybersecurity is a critical aspect of the digital age, protecting sensitive information from cyber threats such as hacking, phishing, and ransomware attacks. Organizations implement security measures like encryption, multi-factor authentication, and AI-driven threat detection to safeguard data. With the rise of cloud computing and IoT devices, cybersecurity challenges continue to evolve, necessitating continuous advancements in security protocols."],
    metadatas=[{"source":"cyberSecurity"}]
)

read_data=collection.get(ids=["id6"])
read_data

#Delete data

collection.delete(ids=["id2"])

#Use another transformation embeddings model

!pip install sentence_transformers -q

from sentence_transformers import SentenceTransformer

embedding_model=SentenceTransformer("all-mpnet-base-v2")

embedding_model.encode(["what is the network security"])   #Encode the data using the import embedding model

len(embedding_model.encode(["what is the network security"])[0])  #get the length of the dimensionality of the encoded value of data

embeddings=embedding_model.encode([content2,content3])
embeddings

new_collection=client.create_collection(name="new_collection")

new_collection.add(
    documents=[content2,content3],
    metadatas=[{"source":"Environment"},{"source":"Science"}],
    embeddings=embeddings,
    ids=["id2","id3"]
)

new_collection.get()

input_text=str(input())
results=new_collection.query(
    query_embeddings=embedding_model.encode(input_text),
    n_results=1
)
results